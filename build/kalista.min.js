/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _kalista = __webpack_require__(/*! ../src/kalista */ 1);
	
	var _kalista2 = _interopRequireDefault(_kalista);
	
	var _cache = __webpack_require__(/*! ../src/cache.js */ 6);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	var _kalista_client = __webpack_require__(/*! ../src/kalista_client */ 8);
	
	var _kalista_client2 = _interopRequireDefault(_kalista_client);
	
	var _kalista_server = __webpack_require__(/*! ../src/kalista_server */ 10);
	
	var _kalista_server2 = _interopRequireDefault(_kalista_server);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @jsx kalista.dom */
	var Test = _kalista2.default.component('Test2', {
	  init: function init() {/*console.log(this)*/},
	  onMount: function onMount() {/*console.log('mounted ' + this.name)*/},
	  onRender: function onRender() {/*console.log('rendered ' + this.name)*/},
	  render: function render() {
	    return _kalista2.default.dom(
	      'div',
	      null,
	      _kalista2.default.dom('input', { type: 'text' }),
	      _kalista2.default.dom(
	        'div',
	        null,
	        this.prop.class
	      )
	    );
	  }
	});
	var Testcomponent = _kalista2.default.component('Test1', {
	  init: function init() {
	    //console.log(this)
	  },
	  onMount: function onMount() {
	    //console.log('mounted ' + this.name)
	  },
	  onRender: function onRender() {
	    //console.log('rendered ' + this.name)
	  },
	  render: function render() {
	    //console.log('rendered')
	    return _kalista2.default.dom(
	      'div',
	      null,
	      _kalista2.default.dom(
	        'div',
	        { id: '123' },
	        '456',
	        _kalista2.default.dom(Test, { 'class': 'blub' })
	      )
	    );
	  }
	});
	console.log(_kalista_client2.default.render(_kalista2.default.dom(Testcomponent, null), document.querySelector('#app')));
	//console.log(kalista_server.render(<Testcomponent class="123" />).outerHTML)

/***/ },
/* 1 */
/*!*************************!*\
  !*** ../src/kalista.js ***!
  \*************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _dom = __webpack_require__(/*! ./dom.js */ 2);
	
	var _dom2 = _interopRequireDefault(_dom);
	
	var _diff = __webpack_require__(/*! ./diff.js */ 3);
	
	var _render = __webpack_require__(/*! ./render.js */ 4);
	
	var _render2 = _interopRequireDefault(_render);
	
	var _component = __webpack_require__(/*! ./component.js */ 7);
	
	var _component2 = _interopRequireDefault(_component);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// assembling the kalista object
	// importing functions
	var kalista = {
	  version: '2.0.1',
	  dom: _dom2.default,
	  render: _render2.default,
	  diff: _diff.diff,
	  component: _component2.default
	};
	// exporting kalista object
	exports.default = kalista;

/***/ },
/* 2 */
/*!*********************!*\
  !*** ../src/dom.js ***!
  \*********************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var dom = function dom(tag, prop) {
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  // function that handles the JSX after being transpiled
	  var componentName = null; // this variable should later be set by the render function
	
	  args.forEach(function (item, i) {
	    if (typeof args[i] === 'string') {
	      args[i] = { tag: 'text', text: args[i] };
	    }
	  });
	  if ((typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object' && tag.isComponent) {
	    tag.prop = prop;
	    //console.log(tag.render())
	  }
	  var obj = { tag: tag, componentName: componentName, prop: prop, children: args || [] }; // the object tree generated by the given JSX
	  return obj;
	};
	
	exports.default = dom;

/***/ },
/* 3 */
/*!**********************!*\
  !*** ../src/diff.js ***!
  \**********************/
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var diff = function diff() {};
	
	var vdom = {};
	
	exports.diff = diff;

/***/ },
/* 4 */
/*!************************!*\
  !*** ../src/render.js ***!
  \************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _util = __webpack_require__(/*! ./util.js */ 5);
	
	var _cache = __webpack_require__(/*! ./cache.js */ 6);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _build = function _build(component, render_id) {
	  var tree = void 0; // clue: the component does not get passed here as a 'component' but as a tag
	  if (component.isComponent) {
	    var render_cache_item = _cache2.default.read('render_cache', render_id);
	    render_cache_item.willMount.push(component.id);
	    _cache2.default.change('render_cache', render_id, render_cache_item);
	    tree = component.render();
	    tree.componentName = component.name;
	    component.onRender();
	    console.log('FIRST', tree);
	  } else {
	    tree = component;
	  }
	  if (tree.children) {
	    tree.children.forEach(function (item, i) {
	      tree.children[i] = _build(tree.children[i], render_id);
	    });
	  }
	  console.log('SEC', tree);
	  return tree;
	};
	
	var _render = function _render(component, render_id, document) {
	  var element = void 0,
	      tree = void 0;
	  // if(component.isComponent) {             // if the 'component' argument is a component
	  //   let render_cache_item = cache.read('render_cache', render_id)
	  //   render_cache_item.willMount.push(component.id)
	  //   cache.change('render_cache', render_id, render_cache_item)
	  //   tree = component.render()             // call the render function
	  //   console.log(gen_id_from_tree(tree))
	  //   tree.componentName = component.name   // set the componentName (inside the JSX tree) if the component has a name
	  //   component.onRender()                  // call the onRender function
	  //
	  // } else {
	  //   tree = component                      // else set the tree variable to the 'component' argument (which actually isn't a component)
	  // }
	  tree = _build(component, render_id, document);
	  if (_typeof(tree.tag) === 'object') {
	    // tree.tag is the component if a component is used inside of JSX
	    element = _render(tree.tag, render_id, document).node; // this component is just passed to render again (its a bit like unwrapping something recursively IYKWIM)
	  } else if (typeof tree.tag === 'function') {
	    // checking if its a function (JSX that is not inside of a component but the return value of a function will trigger this)
	    element = _render(tree.tag(), render_id.node, document); // evaluation the function and then passing it back to render (like it is done with components)
	  } else if ((typeof tree === 'undefined' ? 'undefined' : _typeof(tree)) === 'object' && tree.tag === 'text') {
	    // if the tree is just text
	    return { node: document.createTextNode(tree.text), tree: tree }; // create a text node
	  } else {
	    element = document.createElement(tree.tag); // else create a element with the tag of 'tree.tag'
	    tree = (0, _util.gen_id_from_tree)(tree); // create 'kalista-dataid' for the whole tree
	  }
	  if (tree.prop) {
	    // if properties are given, loop trough them and set them
	    Object.keys(tree.prop).forEach(function (key) {
	      element.setAttribute(key, tree.prop[key]);
	    });
	  }
	
	  element.setAttribute('kalista-dataid', tree['__id__']); // set 'kalista-dataid', used for diffing
	
	  if (tree.children) {
	    // if the element has children, create them
	    tree.children.forEach(function (value, i) {
	      var obj = _render(value, render_id, document);
	      element.appendChild(obj.node);
	    });
	  }
	  return { node: element, willMount: [], tree: tree }; // returning the element (used for recursion)
	};
	
	exports.default = _render;

/***/ },
/* 5 */
/*!**********************!*\
  !*** ../src/util.js ***!
  \**********************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var gen_hash = function gen_hash(length) {
	  var n = new Date().valueOf().toString(),
	      result = '',
	      p = 0,
	      chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
	  for (var i = length; i > 0; --i) {
	    result += i & 1 && n.charAt(p) ? n.charAt(p) : chars[Math.floor(Math.random() * chars.length)];
	    if (i & 1) p++;
	  }
	  return result;
	};
	
	var gen_id_from_tree = function gen_id_from_tree(tree) {
	  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	  var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
	
	  var l_path = path + '.' + n;
	  if (force) tree['__id__'] = l_path; // redoing the whole tree can be forced by setting 'force' to true
	  if (!force) tree['__id__'] = tree['__id__'] ? tree['__id__'] : l_path;
	  if (tree.children) {
	    tree.children.forEach(function (item, i) {
	      if (!tree.children[i]['__id__'] || force) {
	        tree.children[i] = gen_id_from_tree(tree.children[i], l_path, i);
	      }
	    });
	  }
	  return tree;
	};
	
	var component_hierarchy = function component_hierarchy(tree) {
	  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	
	  if (tree.componentName && tree.children) {
	    text += tree.componentName + ' > ';
	  } else if (!tree.componentName && tree.children) {
	    text += tree.tag + ' > ';
	  } else if (tree.componentName && !tree.children) {
	    text += tree.componentName;
	  } else if (!tree.componentName && !tree.children) {
	    text += tree.tag;
	  }
	  if (tree.children) {
	    var texts = tree.children.map(function (item) {
	      return component_hierarchy(item);
	    });
	    if (texts.length > 1) {
	      text += '| ' + texts.join(', ') + ' |';
	    } else {
	      text += texts[0];
	    }
	  }
	  return text;
	};
	
	exports.gen_hash = gen_hash;
	exports.gen_id_from_tree = gen_id_from_tree;
	exports.component_hierarchy = component_hierarchy;

/***/ },
/* 6 */
/*!***********************!*\
  !*** ../src/cache.js ***!
  \***********************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var development = false;
	
	var middleware = function middleware() {
	  for (var _len = arguments.length, messages = Array(_len), _key = 0; _key < _len; _key++) {
	    messages[_key] = arguments[_key];
	  }
	
	  mw.forEach(function (item) {
	    item.apply(undefined, messages);
	  });
	};
	
	var mw = [function () {
	  var _console;
	
	  if (development) (_console = console).log.apply(_console, arguments);
	}];
	
	var registerMiddleware = function registerMiddleware(fn) {
	  return mw.push(fn) - 1;
	};
	
	var unregisterMiddleware = function unregisterMiddleware(id) {
	  mw.splice(id, 1);
	};
	
	var caches = { // the default caches
	  status: [],
	  components: [],
	  events: [],
	  render_cache: {}
	};
	
	var cache_types = { // caches with corresponding cache type
	  'status': 'array',
	  'components': 'array',
	  'events': 'array',
	  'render_cache': 'object'
	};
	
	var cache_protected = { // different levels of protection (0: no protection, deletion
	  'status': 2, // is allowed, 1: deletion is not allowed but setting the whole
	  'components': 2, // cache to a new value is, 2: only adding to the cache is allowed)
	  'events': 1
	};
	
	var write = function write(cache_name) {
	  for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    values[_key2 - 1] = arguments[_key2];
	  }
	
	  // adding to a cache (type of interaction based on cache type)
	  middleware.apply(undefined, values);
	  if (caches[cache_name] === undefined) {
	    write('status', 'cache with the name ' + cache_name + ' does not exist ("CACHE:WRITE").');
	    return false;
	  } else {
	    if (cache_types[cache_name] === 'array') {
	      var _caches$cache_name;
	
	      // array: adding items to the array
	      (_caches$cache_name = caches[cache_name]).push.apply(_caches$cache_name, values);
	      return true;
	    } else if (cache_types[cache_name] === 'object') {
	      // object: adding {key: value} pairs
	      if (values.length < 2) {
	        write('status', 'amount of arguments is too low, 2 arguments are required: ' + values + ' ("CACHE:WRITE").');
	        return false;
	      }
	      caches[cache_name][values[0]] = values[1];
	      return true;
	    } else if (cache_types[cache_name] === 'number') {
	      // adding to the number (used for incrementing, negative numbers used for decrementing)
	      caches[cache_name] += values[0];
	      return true;
	    } else if (cache_types[cache_name] === 'string') {
	      // adding to a string (no real use case as of now but it is available)
	      caches[cache_name] += values[0];
	      return true;
	    } else {
	      write('status', 'some error occured (in "CACHE:WRITE").');
	      return false;
	    }
	  }
	};
	
	var change = function change(cache_name, location, value) {
	  middleware(location, value);
	  if (caches[cache_name] === undefined) {
	    write('status', 'cache with the name ' + cache_name + ' does not exist ("CACHE:CHANGE").');
	    return false;
	  } else {
	    if (cache_types[cache_name] === 'array') {
	      if (caches[cache_name][location] = value) {
	        return true;
	      } else {
	        return false;
	      }
	    } else if (cache_types[cache_name] === 'object') {
	      if (caches[cache_name][location] = value) {
	        return true;
	      } else {
	        return false;
	      }
	    }
	  }
	};
	
	var set = function set(cache_name, value) {
	  // setting the value of a complete cache
	  if (caches[cache_name] === undefined) {
	    // (only if the cache has a protection level of less than 2)
	    middleware(value);
	    write('status', 'cache with the name ' + cache_name + ' does not exist ("CACHE:SET").');
	    return false;
	  } else if (cache_protected[cache_name] <= 1) {
	    caches[cache_name] = value;
	    return true;
	  } else {
	    write('status', 'cache with protection level ' + cache_protected[cache_name] + 'does not allow this change ("CACHE:SET").');
	  }
	};
	
	var read = function read(cache_name, location) {
	  // reading from a cache (allowed for all caches regardless of protection level)
	  if (caches[cache_name] === undefined) {
	    write('status', 'cache with the name ' + cache_name + ' does not exist ("CACHE:READ").');
	    return false;
	  } else {
	    if (cache_types[cache_name] === 'array' && location) {
	      return caches[cache_name][location];
	    } else if (cache_types[cache_name] === 'object' && location) {
	      return caches[cache_name][location];
	    } else {
	      return caches[cache_name];
	    }
	  }
	};
	
	var create = function create(cache_name) {
	  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'array';
	  // create a new cache (optional types are: array([]), object({}), number(0), string('') ; default is array)
	  if (caches[cache_name] !== undefined) {
	    write('status', 'a cache with this name exists already ("CACHE:CREATE").');
	
	    return false;
	  } else {
	    if (type === 'array') {
	      // setting the cache type
	      caches[cache_name] = [];
	      cache_types[cache_name] = type;
	    } else if (type === 'object') {
	      caches[cache_name] = {};
	      cache_types[cache_name] = type;
	    } else if (type === 'number') {
	      caches[cache_name] = 0;
	      cache_types[cache_name] = type;
	    } else if (type === 'string') {
	      caches[cache_name] = '';
	      cache_types[cache_name] = type;
	    } else {
	      write('status', 'type not available: ' + type + ' ("CACHE:CREATE").');
	      return false;
	    }
	    middleware('cache created: ' + cache_name);
	    return true;
	  }
	};
	
	var del = function del(cache_name) {
	  // deleting a cache (protection level 0 only)
	  if (caches[cache_name] === undefined) {
	    write('status', 'cache with the name ' + cache_name + ' does not exist ("CACHE:DEL").');
	    return false;
	  } else if (cache_protected[cache_name] >= 1) {
	    write('status', 'deleting cache ' + cache_name + ' with protection level greater than or equal to 1 is not allowed ("CACHE:DEL").');
	    return false;
	  } else {
	    return delete caches[cache_name];
	  }
	};
	
	exports.default = { write: write, set: set, change: change, read: read, create: create, del: del, registerMiddleware: registerMiddleware, unregisterMiddleware: unregisterMiddleware };

/***/ },
/* 7 */
/*!***************************!*\
  !*** ../src/component.js ***!
  \***************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _util = __webpack_require__(/*! ./util.js */ 5);
	
	var _cache = __webpack_require__(/*! ./cache.js */ 6);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var component = function component(name, componentObject) {
	  // component creation (with component object as an argument)
	  if (typeof name !== 'string') {
	    // no name given, 'name' and 'componentObject' arguments must be swapped
	    componentObject = name;
	    name = null;
	  }
	  componentObject.id = (0, _util.gen_hash)(16); // generating a 16 digit long random id (numbers, alphabet (upper and lower caser)) with gen_hash from util.js
	  componentObject.name = name; // if a name is given, set is as the name, else use null
	  componentObject.isComponent = true; // isComponent is there to check if it is infact a component (useful for rendering)
	  if (!componentObject.onMount) {
	    // setting onMount if it isn't set
	    componentObject.onMount = function () {};
	  }
	  if (!componentObject.onRender) {
	    // setting onRender if it isn't set
	    componentObject.onRender = function () {};
	  }
	  if (!componentObject.init) {
	    // setting init if it isn't set
	    componentObject.init = function () {};
	  }
	  componentObject.init(); // running the init of the component
	  _cache2.default.write('components', componentObject);
	  return componentObject; // returning the componentObject
	};
	
	exports.default = component;

/***/ },
/* 8 */
/*!**************************************!*\
  !*** ../src/kalista_client/index.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _render = __webpack_require__(/*! ./render.js */ 9);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var kalista_client = {
	  render: _render2.default
	};
	
	exports.default = kalista_client;

/***/ },
/* 9 */
/*!***************************************!*\
  !*** ../src/kalista_client/render.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _render2 = __webpack_require__(/*! ../render.js */ 4);
	
	var _render3 = _interopRequireDefault(_render2);
	
	var _util = __webpack_require__(/*! ../util.js */ 5);
	
	var _cache = __webpack_require__(/*! ../cache.js */ 6);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	var _diff = __webpack_require__(/*! ../diff.js */ 3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var render = function render(component, element) {
	  var render_id = (0, _util.gen_hash)(32);
	  _cache2.default.write('render_cache', render_id, { id: render_id, willMount: [] });
	  var obj = (0, _render3.default)(component, render_id, document);
	  var components = _cache2.default.read('components');
	  _cache2.default.read('render_cache', render_id).willMount.forEach(function (id) {
	    components.forEach(function (component) {
	      if (component.id === id) {
	        component.onMount();
	      }
	    });
	  });
	  if ((typeof element === 'undefined' ? 'undefined' : _typeof(element)) === 'object') {
	    element.appendChild(obj.node);
	  }
	  //console.log(obj.tree)
	  return obj.node;
	};
	
	exports.default = render;

/***/ },
/* 10 */
/*!**************************************!*\
  !*** ../src/kalista_server/index.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _render = __webpack_require__(/*! ./render.js */ 11);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var kalista_server = {
	  render: _render2.default
	};
	
	exports.default = kalista_server;

/***/ },
/* 11 */
/*!***************************************!*\
  !*** ../src/kalista_server/render.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _htmlElement = __webpack_require__(/*! html-element */ 12);
	
	var _render2 = __webpack_require__(/*! ../render.js */ 4);
	
	var _render3 = _interopRequireDefault(_render2);
	
	var _util = __webpack_require__(/*! ../util.js */ 5);
	
	var _cache = __webpack_require__(/*! ../cache.js */ 6);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	var _diff = __webpack_require__(/*! ../diff.js */ 3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var render = function render(component) {
	  var render_id = (0, _util.gen_hash)(32);
	  _cache2.default.write('render_cache', render_id, { id: render_id, willMount: [] });
	  var obj = (0, _render3.default)(component, render_id, _htmlElement.document);
	  var components = _cache2.default.read('components');
	  _cache2.default.read('render_cache', render_id).willMount.forEach(function (id) {
	    components.forEach(function (component) {
	      if (component.id === id) {
	        component.onMount();
	      }
	    });
	  });
	  //console.log(obj.tree)
	  return obj.node;
	};
	
	exports.default = render;

/***/ },
/* 12 */
/*!**********************************!*\
  !*** ../~/html-element/index.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	var ClassList = __webpack_require__(/*! class-list */ 13)
	var htmlAttributes = __webpack_require__(/*! ./html-attributes */ 15);
	
	function Document() {}
	
	Document.prototype.createTextNode = function(v) {
	    var n = new Text();
	    n.textContent = v;
	    n.nodeName = '#text'
	    n.nodeType = 3
	    return n;
	}
	
	Document.prototype.createElement = function(nodeName) {
	    var el = new Element();
	    el.nodeName = nodeName;
	    return el;
	}
	
	Document.prototype.createComment = function(data) {
	    var el = new Comment()
	    el.data = data
	    return el;
	}
	
	
	function Node () {}
	
	Text.prototype = new Node()
	
	Element.prototype = new Node()
	
	Comment.prototype = new Node()
	
	
	function Style (el) {
	  this.el = el;
	  this.styles = [];
	}
	
	Style.prototype.setProperty = function (n,v) {
	    this.el._setProperty(this.styles, {name: n, value:v});
	}
	
	Style.prototype.getProperty = function(n) {
	    return this.el._getProperty(this.styles, n);
	}
	
	Style.prototype.__defineGetter__('cssText', function () {
	    var stylified = '';
	    this.styles.forEach(function(s){
	      stylified+=s.name+':'+s.value+';';
	    })
	    return stylified;
	})
	
	Style.prototype.__defineSetter__('cssText', function (v) {
	    this.styles.length = 0
	
	    // parse cssText and set style attributes
	    v.split(';').forEach(function(part){
	      var splitPoint = part.indexOf(':')
	      if (splitPoint){
	        var key = part.slice(0, splitPoint).trim()
	        var value = part.slice(splitPoint+1).trim()
	        this.setProperty(key, value)
	      }
	    }, this)
	})
	
	function Attribute(name, value){
	  if (name) {
	    this.name = name;
	    this.value = value ? value : '';
	  }
	}
	
	
	function Element() {
	    var self = this;
	
	    this.style = new Style(this)
	    this.classList = ClassList(this);
	    this.childNodes = [];
	    this.attributes = [];
	    this.dataset = {};
	    this.className = '';
	
	    this._setProperty = function(arr, obj, key, val) {
	      var p = self._getProperty(arr, key);
	      if (p) {
	        p.value = String(val);
	        return;
	      }
	      arr.push('function' === typeof obj ? new obj(key.toLowerCase(),String(val)) : obj);
	    }
	
	    this._getProperty = function (arr, key) {
	      if (!key) return;
	      key = key.toLowerCase();
	      for (var i=0;i<arr.length;i++) {
	        if (key == arr[i].name) return arr[i];
	      }
	    }
	}
	
	Element.prototype.nodeType = 1;
	
	Element.prototype.appendChild = function (child) {
	    child.parentElement = this;
	    this.childNodes.push(child);
	    return child;
	}
	
	Element.prototype.setAttribute = function (n, v) {
	  if (n == 'style'){
	    this.style.cssText = v
	  } else {
	    this._setProperty(this.attributes, Attribute, n, v);
	  }
	}
	
	Element.prototype.getAttribute = function (n) {
	  if (n == 'style'){
	    return this.style.cssText
	  } else {
	    var result = this._getProperty(this.attributes, n);
	    return typeof result !== 'undefined' ? result.value : null;
	  }
	}
	
	Element.prototype.removeAttribute = function (n) {
	  if (n === 'class') {
	    delete this.className;
	  } else {
	    for (var i = 0, len = this.attributes.length; i < len; i++) {
	      if (this.attributes[i].name === n) {
	        this.attributes.splice(i, 1);
	        break;
	      }
	    }
	  }
	}
	
	Element.prototype.replaceChild = function(newChild, oldChild) {
	    var self = this;
	    var replaced = false;
	    this.childNodes.forEach(function(child, index){
	        if (child === oldChild) {
	            self.childNodes[index] = newChild;
	            replaced = true;
	        }
	    });
	    if (replaced) return oldChild;
	}
	
	Element.prototype.removeChild = function(rChild) {
	    var self = this;
	    var removed = true;
	    this.childNodes.forEach(function(child, index){
	        if (child === rChild) {
	          // use splice to keep a clean childNode array
	          self.childNodes.splice(index, 1)
	          removed = true;
	        }
	    })
	    if (removed) return rChild;
	}
	
	Element.prototype.insertBefore = function (newChild, existingChild) {
	  var childNodes = this.childNodes;
	  for (var i = 0, len = childNodes.length; i < len; i++) {
	    var child = childNodes[i];
	    if (child === existingChild) {
	      i === 0 ? childNodes.unshift(newChild) : childNodes.splice(i, 0, newChild);
	      break;
	    }
	  }
	  return newChild;
	}
	
	Element.prototype.addEventListener = function(type, listener, useCapture, wantsUntrusted) {
	  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener
	  // There is an implementation there but probably not worth it.
	}
	
	Element.prototype.removeEventListener = function(type, listener, useCapture) {
	  // https://developer.mozilla.org/en/docs/Web/API/EventTarget.removeEventListener
	  // There is an implementation there but probably not worth it.
	}
	
	Element.prototype.insertAdjacentHTML = function(position, text) {
	  // https://developer.mozilla.org/en-US/docs/Web/API/Element.insertAdjacentHTML
	  // Not too much work to implement similar to innerHTML below.
	}
	
	Element.prototype.__defineGetter__('innerHTML', function () {
	    // regurgitate set innerHTML
	    var s = this.childNodes.html || ''
	    this.childNodes.forEach(function (e) {
	      s += (e.outerHTML || e.textContent)
	    })
	    return s
	})
	
	Element.prototype.__defineSetter__('innerHTML', function (v) {
	    //only handle this simple case that doesn't need parsing
	    //this case is useful... parsing is hard and will need added deps!
	    this.childNodes.length = 0
	
	    // hack to preserve set innerHTML - no parsing just regurgitation
	    this.childNodes.html = v
	})
	
	
	Element.prototype.__defineGetter__('outerHTML', function () {
	  var a = [],  self = this;
	  var VOID_ELEMENTS = {
	    AREA: true,
	    BASE: true,
	    BR: true,
	    COL: true,
	    EMBED: true,
	    HR: true,
	    IMG: true,
	    INPUT: true,
	    KEYGEN: true,
	    LINK: true,
	    META: true,
	    PARAM: true,
	    SOURCE: true,
	    TRACK: true,
	    WBR: true
	  };
	
	  function _stringify(arr) {
	    var attr = [], value;
	    arr.forEach(function(a){
	      value = ('style' != a.name) ? a.value : self.style.cssText;
	      attr.push(a.name+'='+'\"'+escapeAttribute(value)+'\"');
	    })
	    return attr.length ? ' '+attr.join(" ") : '';
	  }
	
	  function _dataify(data) {
	    var attr = [], value;
	    Object.keys(data).forEach(function(name){
	      attr.push('data-'+name+'='+'\"'+escapeAttribute(data[name])+'\"');
	    })
	    return attr.length ? ' '+attr.join(" ") : '';
	  }
	
	  function _propertify() {
	    var props = [];
	    for (var key in self) {
	      var attrName = htmlAttributes.propToAttr(key);
	      if (
	        self.hasOwnProperty(key) &&
	        ['string', 'boolean', 'number'].indexOf(typeof self[key]) !== -1 &&
	        htmlAttributes.isStandardAttribute(attrName, self.nodeName) &&
	        _shouldOutputProp(key, attrName)
	      ) {
	        props.push({name: attrName, value: self[key]});
	      }
	    }
	    return props ? _stringify(props) : '';
	  }
	
	  function _shouldOutputProp(prop, attr) {
	    if (self.getAttribute(attr)) {
	      // let explicitly-set attributes override props
	      return false;
	    } else {
	      if (prop === 'className' && !self[prop]) {
	        return false;
	      }
	    }
	    return true;
	  }
	
	  var attrs = this.style.cssText ? this.attributes.concat([{name: 'style'}]) : this.attributes;
	
	  a.push('<'+this.nodeName + _propertify() + _stringify(attrs) + _dataify(this.dataset) +'>')
	
	  if (!VOID_ELEMENTS[this.nodeName.toUpperCase()]){
	    a.push(this.innerHTML)
	    a.push('</'+this.nodeName+'>')
	  }
	
	  return a.join('')
	})
	
	Element.prototype.__defineGetter__('textContent', function () {
	  var s = ''
	  this.childNodes.forEach(function (e) {
	    s += e.textContent
	  })
	  return s
	})
	
	Element.prototype.addEventListener = function(t, l) {}
	
	function escapeHTML(s) {
	  return String(s)
	      .replace(/&/g, '&amp;')
	      .replace(/</g, '&lt;')
	      .replace(/>/g, '&gt;');
	}
	
	function escapeAttribute(s) {
	  return escapeHTML(s).replace(/"/g, '&quot;')
	}
	
	Element.prototype.nodeValue = null;
	
	function Text(){}
	
	Text.prototype.nodeType = 3;
	
	Text.prototype.nodeName = '#text';
	
	Text.prototype.__defineGetter__('textContent', function() {
	  return escapeHTML(this.value || '');
	})
	
	Text.prototype.__defineSetter__('textContent', function(v) {
	  this.value = v
	})
	
	Text.prototype.__defineGetter__('nodeValue', function() {
	  return escapeHTML(this.value || '');
	})
	
	Text.prototype.__defineSetter__('nodeValue', function(v) {
	  this.value = v
	})
	
	Text.prototype.__defineGetter__('length', function() {
	  return (this.value || '').length;
	})
	
	Text.prototype.replaceData = function(offset, length, str) {
	  this.value = this.value.slice(0, offset) + str + this.value.slice(offset + length);
	};
	
	function Comment(){}
	
	Comment.prototype.nodeType = 8;
	
	Comment.prototype.nodeName = '#comment';
	
	Comment.prototype.__defineGetter__('data', function() {
	  return this.value
	})
	
	Comment.prototype.__defineSetter__('data', function(v) {
	  this.value = v
	})
	
	Comment.prototype.__defineGetter__('outerHTML', function() {
	  return '<!--' + escapeHTML(this.value || '') + '-->'
	})
	
	Comment.prototype.__defineGetter__('nodeValue', function() {
	  return escapeHTML(this.value || '');
	})
	
	Comment.prototype.__defineSetter__('nodeValue', function(v) {
	  this.value = v
	})
	
	function defineParentNode (obj) {
	  obj.__defineGetter__('parentNode', function () { return this.parentElement });
	}
	
	defineParentNode(Element.prototype)
	defineParentNode(Comment.prototype)
	defineParentNode(Text.prototype)
	defineParentNode(Node.prototype)
	
	module.exports = {
	  Document: Document,
	  Node: Node,
	  Element: Element,
	  Comment: Comment,
	  Text: Text,
	  document: new Document(),
	};


/***/ },
/* 13 */
/*!********************************!*\
  !*** ../~/class-list/index.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	// contains, add, remove, toggle
	var indexof = __webpack_require__(/*! indexof */ 14)
	
	module.exports = ClassList
	
	function ClassList(elem) {
	    var cl = elem.classList
	
	    if (cl) {
	        return cl
	    }
	
	    var classList = {
	        add: add
	        , remove: remove
	        , contains: contains
	        , toggle: toggle
	        , toString: $toString
	        , length: 0
	        , item: item
	    }
	
	    return classList
	
	    function add(token) {
	        var list = getTokens()
	        if (indexof(list, token) > -1) {
	            return
	        }
	        list.push(token)
	        setTokens(list)
	    }
	
	    function remove(token) {
	        var list = getTokens()
	            , index = indexof(list, token)
	
	        if (index === -1) {
	            return
	        }
	
	        list.splice(index, 1)
	        setTokens(list)
	    }
	
	    function contains(token) {
	        return indexof(getTokens(), token) > -1
	    }
	
	    function toggle(token) {
	        if (contains(token)) {
	            remove(token)
	            return false
	        } else {
	            add(token)
	            return true
	        }
	    }
	
	    function $toString() {
	        return elem.className
	    }
	
	    function item(index) {
	        var tokens = getTokens()
	        return tokens[index] || null
	    }
	
	    function getTokens() {
	        var className = elem.className
	
	        return filter(className.split(" "), isTruthy)
	    }
	
	    function setTokens(list) {
	        var length = list.length
	
	        elem.className = list.join(" ")
	        classList.length = length
	
	        for (var i = 0; i < list.length; i++) {
	            classList[i] = list[i]
	        }
	
	        delete list[length]
	    }
	}
	
	function filter (arr, fn) {
	    var ret = []
	    for (var i = 0; i < arr.length; i++) {
	        if (fn(arr[i])) ret.push(arr[i])
	    }
	    return ret
	}
	
	function isTruthy(value) {
	    return !!value
	}


/***/ },
/* 14 */
/*!*****************************!*\
  !*** ../~/indexof/index.js ***!
  \*****************************/
/***/ function(module, exports) {

	
	var indexOf = [].indexOf;
	
	module.exports = function(arr, obj){
	  if (indexOf) return arr.indexOf(obj);
	  for (var i = 0; i < arr.length; ++i) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	};

/***/ },
/* 15 */
/*!********************************************!*\
  !*** ../~/html-element/html-attributes.js ***!
  \********************************************/
/***/ function(module, exports) {

	/**
	 * Utils for HTML attributes
	 * @module html-attributes
	 */
	
	// property to attribute names
	var PROPS_TO_ATTRS = {
	  'className': 'class',
	  'htmlFor': 'for',
	};
	
	// map of attributes to the elements they affect
	// see https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes
	var HTML_ATTRIBUTES = {
	  'accept': new Set([
	    'form',
	    'input',
	  ]),
	
	  'accept-charset': new Set([
	    'form',
	  ]),
	
	  'accesskey': 'GLOBAL',
	
	  'action': new Set([
	    'form',
	  ]),
	
	  'align': new Set([
	    'applet',
	    'caption',
	    'col',
	    'colgroup',
	    'hr',
	    'iframe',
	    'img',
	    'table',
	    'tbody',
	    'td',
	    'tfoot',
	    'th',
	    'thead',
	    'tr',
	  ]),
	
	  'alt': new Set([
	    'applet',
	    'area',
	    'img',
	    'input',
	  ]),
	
	  'async': new Set([
	    'script',
	  ]),
	
	  'autocomplete': new Set([
	    'form',
	    'input',
	  ]),
	
	  'autofocus': new Set([
	    'button',
	    'input',
	    'keygen',
	    'select',
	    'textarea',
	  ]),
	
	  'autoplay': new Set([
	    'audio',
	    'video',
	  ]),
	
	  'autosave': new Set([
	    'input',
	  ]),
	
	  'bgcolor': new Set([
	    'body',
	    'col',
	    'colgroup',
	    'marquee',
	    'table',
	    'tbody',
	    'tfoot',
	    'td',
	    'th',
	    'tr',
	  ]),
	
	  'border': new Set([
	    'img',
	    'object',
	    'table',
	  ]),
	
	  'buffered': new Set([
	    'audio',
	    'video',
	  ]),
	
	  'challenge': new Set([
	    'keygen',
	  ]),
	
	  'charset': new Set([
	    'meta',
	    'script',
	  ]),
	
	  'checked': new Set([
	    'command',
	    'input',
	  ]),
	
	  'cite': new Set([
	    'blockquote',
	    'del',
	    'ins',
	    'q',
	  ]),
	
	  'class': 'GLOBAL',
	
	  'code': new Set([
	    'applet',
	  ]),
	
	  'codebase': new Set([
	    'applet',
	  ]),
	
	  'color': new Set([
	    'basefont',
	    'font',
	    'hr',
	  ]),
	
	  'cols': new Set([
	    'textarea',
	  ]),
	
	  'colspan': new Set([
	    'td',
	    'th',
	  ]),
	
	  'content': new Set([
	    'meta',
	  ]),
	
	  'contenteditable': 'GLOBAL',
	
	  'contextmenu': 'GLOBAL',
	
	  'controls': new Set([
	    'audio',
	    'video',
	  ]),
	
	  'coords': new Set([
	    'area',
	  ]),
	
	  'data': new Set([
	    'object',
	  ]),
	
	  'datetime': new Set([
	    'del',
	    'ins',
	    'time',
	  ]),
	
	  'default': new Set([
	    'track',
	  ]),
	
	  'defer': new Set([
	    'script',
	  ]),
	
	  'dir': 'GLOBAL',
	
	  'dirname': new Set([
	    'input',
	    'textarea',
	  ]),
	
	  'disabled': new Set([
	    'button',
	    'command',
	    'fieldset',
	    'input',
	    'keygen',
	    'optgroup',
	    'option',
	    'select',
	    'textarea',
	  ]),
	
	  'download': new Set([
	    'a',
	    'area',
	  ]),
	
	  'draggable': 'GLOBAL',
	
	  'dropzone': 'GLOBAL',
	
	  'enctype': new Set([
	    'form',
	  ]),
	
	  'for': new Set([
	    'label',
	    'output',
	  ]),
	
	  'form': new Set([
	    'button',
	    'fieldset',
	    'input',
	    'keygen',
	    'label',
	    'meter',
	    'object',
	    'output',
	    'progress',
	    'select',
	    'textarea',
	  ]),
	
	  'formaction': new Set([
	    'input',
	    'button',
	  ]),
	
	  'headers': new Set([
	    'td',
	    'th',
	  ]),
	
	  'height': new Set([
	    'canvas',
	    'embed',
	    'iframe',
	    'img',
	    'input',
	    'object',
	    'video',
	  ]),
	
	  'hidden': 'GLOBAL',
	
	  'high': new Set([
	    'meter',
	  ]),
	
	  'href': new Set([
	    'a',
	    'area',
	    'base',
	    'link',
	  ]),
	
	  'hreflang': new Set([
	    'a',
	    'area',
	    'link',
	  ]),
	
	  'http-equiv': new Set([
	    'meta',
	  ]),
	
	  'icon': new Set([
	    'command',
	  ]),
	
	  'id': 'GLOBAL',
	
	  'ismap': new Set([
	    'img',
	  ]),
	
	  'itemprop': 'GLOBAL',
	
	  'keytype': new Set([
	    'keygen',
	  ]),
	
	  'kind': new Set([
	    'track',
	  ]),
	
	  'label': new Set([
	    'track',
	  ]),
	
	  'lang': 'GLOBAL',
	
	  'language': new Set([
	    'script',
	  ]),
	
	  'list': new Set([
	    'input',
	  ]),
	
	  'loop': new Set([
	    'audio',
	    'bgsound',
	    'marquee',
	    'video',
	  ]),
	
	  'low': new Set([
	    'meter',
	  ]),
	
	  'manifest': new Set([
	    'html',
	  ]),
	
	  'max': new Set([
	    'input',
	    'meter',
	    'progress',
	  ]),
	
	  'maxlength': new Set([
	    'input',
	    'textarea',
	  ]),
	
	  'media': new Set([
	    'a',
	    'area',
	    'link',
	    'source',
	    'style',
	  ]),
	
	  'method': new Set([
	    'form',
	  ]),
	
	  'min': new Set([
	    'input',
	    'meter',
	  ]),
	
	  'multiple': new Set([
	    'input',
	    'select',
	  ]),
	
	  'muted': new Set([
	    'video',
	  ]),
	
	  'name': new Set([
	    'button',
	    'form',
	    'fieldset',
	    'iframe',
	    'input',
	    'keygen',
	    'object',
	    'output',
	    'select',
	    'textarea',
	    'map',
	    'meta',
	    'param',
	  ]),
	
	  'novalidate': new Set([
	    'form',
	  ]),
	
	  'open': new Set([
	    'details',
	  ]),
	
	  'optimum': new Set([
	    'meter',
	  ]),
	
	  'pattern': new Set([
	    'input',
	  ]),
	
	  'ping': new Set([
	    'a',
	    'area',
	  ]),
	
	  'placeholder': new Set([
	    'input',
	    'textarea',
	  ]),
	
	  'poster': new Set([
	    'video',
	  ]),
	
	  'preload': new Set([
	    'audio',
	    'video',
	  ]),
	
	  'radiogroup': new Set([
	    'command',
	  ]),
	
	  'readonly': new Set([
	    'input',
	    'textarea',
	  ]),
	
	  'rel': new Set([
	    'a',
	    'area',
	    'link',
	  ]),
	
	  'required': new Set([
	    'input',
	    'select',
	    'textarea',
	  ]),
	
	  'reversed': new Set([
	    'ol',
	  ]),
	
	  'rows': new Set([
	    'textarea',
	  ]),
	
	  'rowspan': new Set([
	    'td',
	    'th',
	  ]),
	
	  'sandbox': new Set([
	    'iframe',
	  ]),
	
	  'scope': new Set([
	    'th',
	  ]),
	
	  'scoped': new Set([
	    'style',
	  ]),
	
	  'seamless': new Set([
	    'iframe',
	  ]),
	
	  'selected': new Set([
	    'option',
	  ]),
	
	  'shape': new Set([
	    'a',
	    'area',
	  ]),
	
	  'size': new Set([
	    'input',
	    'select',
	  ]),
	
	  'sizes': new Set([
	    'img',
	    'link',
	    'source',
	  ]),
	
	  'span': new Set([
	    'col',
	    'colgroup',
	  ]),
	
	  'spellcheck': 'GLOBAL',
	
	  'src': new Set([
	    'audio',
	    'embed',
	    'iframe',
	    'img',
	    'input',
	    'script',
	    'source',
	    'track',
	    'video',
	  ]),
	
	  'srcdoc': new Set([
	    'iframe',
	  ]),
	
	  'srclang': new Set([
	    'track',
	  ]),
	
	  'srcset': new Set([
	    'img',
	  ]),
	
	  'start': new Set([
	    'ol',
	  ]),
	
	  'step': new Set([
	    'input',
	  ]),
	
	  'style': 'GLOBAL',
	
	  'summary': new Set([
	    'table',
	  ]),
	
	  'tabindex': 'GLOBAL',
	
	  'target': new Set([
	    'a',
	    'area',
	    'base',
	    'form',
	  ]),
	
	  'title': 'GLOBAL',
	
	  'type': new Set([
	    'button',
	    'input',
	    'command',
	    'embed',
	    'object',
	    'script',
	    'source',
	    'style',
	    'menu',
	  ]),
	
	  'usemap': new Set([
	    'img',
	    'input',
	    'object',
	  ]),
	
	  'value': new Set([
	    'button',
	    'option',
	    'input',
	    'li',
	    'meter',
	    'progress',
	    'param',
	  ]),
	
	  'width': new Set([
	    'canvas',
	    'embed',
	    'iframe',
	    'img',
	    'input',
	    'object',
	    'video',
	  ]),
	
	  'wrap': new Set([
	    'textarea',
	  ]),
	};
	
	function isStandardAttribute(attrName, tagName) {
	  tagName = tagName.toLowerCase();
	  var attr = HTML_ATTRIBUTES[attrName.toLowerCase()];
	  return !!attr && (
	    attr === 'GLOBAL' ||
	    attr.has(tagName)
	  );
	}
	
	function propToAttr(prop) {
	  return PROPS_TO_ATTRS[prop] || prop;
	}
	
	module.exports = {
	  isStandardAttribute: isStandardAttribute,
	  propToAttr: propToAttr,
	};


/***/ }
/******/ ]);
//# sourceMappingURL=kalista.min.js.map